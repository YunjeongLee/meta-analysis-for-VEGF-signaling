label = list(affected ~ "Affected, % (n)")) %>%
add_overall() %>%
modify_footnote(everything() ~ NA)
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library(tidyverse) # Need to use %>% function and filter() function
library(ggplot2) # Needed to create scatter plot with ggplot()
library(sandwich) # Needed to run linear regression not assuming constant
perio1class <- read.csv(file="perio1class.csv")
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library(tidyverse) # Need to use %>% function and filter() function
library(ggplot2) # Needed to create scatter plot with ggplot()
library(sandwich) # Needed to run linear regression not assuming constant
install.packages("sandwich")
install.packages("sandwich")
install.packages("sandwich")
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library(tidyverse) # Need to use %>% function and filter() function
library(ggplot2) # Needed to create scatter plot with ggplot()
library(sandwich) # Needed to run linear regression not assuming constant
# variance for the errors
library(lmtest) # Needed to run linear regression not assuming constant
# variance for the errors
library(car) # Need to create qqplot with a confidence band
library(RVAideMemoire) # Needed to compute a 95% confidence interval for the
install.packages("RVAideMemoire")
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library(tidyverse) # Need to use %>% function and filter() function
library(ggplot2) # Needed to create scatter plot with ggplot()
library(sandwich) # Needed to run linear regression not assuming constant
# variance for the errors
library(lmtest) # Needed to run linear regression not assuming constant
# variance for the errors
library(car) # Need to create qqplot with a confidence band
library(RVAideMemoire) # Needed to compute a 95% confidence interval for the
install.packages("RVAideMemoire")
install.packages("RVAideMemoire")
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library(tidyverse) # Need to use %>% function and filter() function
library(ggplot2) # Needed to create scatter plot with ggplot()
library(sandwich) # Needed to run linear regression not assuming constant
# variance for the errors
library(lmtest) # Needed to run linear regression not assuming constant
# variance for the errors
library(car) # Need to create qqplot with a confidence band
library(RVAideMemoire) # Needed to compute a 95% confidence interval for the
# Spearman rank correlation coefficient
perio1class <- read.csv(file="perio1class.csv")
perio1class <- read.csv(file="perio1class.csv")
View(perio1class)
View(perio1class)
# Use the default theme which includes shading and reference lines
ggplot(data=perio1class, aes(x=pge, y=cadia, color=condition)) +
geom_point(size =2 , alpha = 1.0) +
geom_smooth(method="loess", color="black", span = 0.75) +
labs(color = "Condition", x = "Prostaglandin E2",
y = "Change in bone density (CADIA)") +
theme_classic()
# Note: Two treated animals are missing pge data, so R will display a warning
# that the observations have been deleted.  I have used the option
# warning=FALSE to suppress the warning. I have used the option message=FALSE
# to suppress the message that geom_smooth() is using the formula y ~ x.
# Another option is to add formula = y ~ x after method="loess" in the
# geom_smooth() function.
# span = 0.75 controls the amount of smoothing; span = 0.75 is the default.
ggplot(data=perio1class, aes(x=tnf, y=cadia, color=condition)) +
geom_point(size =2 , alpha = 1.0) +
geom_smooth(method="loess", color="black", span = 0.75) +
labs(color = "Condition", x = "Prostaglandin E2",
y = "Change in bone density (CADIA)") +
theme_classic()
ggplot(data=perio1class, aes(x=tnf, y=cadia, color=condition)) +
geom_point(size =2 , alpha = 1.0) +
geom_smooth(method="loess", color="black", span = 0.75) +
labs(color = "Condition", x = "Tumor necrosis factor alpha",
y = "Change in bone density (CADIA)") +
theme_classic()
cor.test(~ pge + cadia, data=perio1class, method="pearson")
cor.test(~ tnf + cadia, data=perio1class, method="pearson")
cor.test(~ pge + cadia, data=perio1class, method="spearman")
cor.test(~ tnf + cadia, data=perio1class, method="spearman")
spearman.ci(perio1class$pge, perio1class$cadia, nrep=10000, conf.level = 0.95)
```
spearman.ci(perio1class$pge, perio1class$cadia, nrep=1000, conf.level = 0.95)
spearman.ci(perio1class$tnf, perio1class$cadia, nrep=1000, conf.level = 0.95)
cor.test(~ pge + cadia, data=perio1class, method="spearman")
cor.test(~ tnf + cadia, data=perio1class, method="spearman")
# Run a linear regression and save the results in regresults to use with
# the summary() function
regresults <-lm(cadia ~ tnf, data=perio1class)
# Summary of the linear regression results and save the results for later use
# in creating scatter plot displaying the linear regression results
regsum <- summary(regresults)
regsum
# 95% confidence interval for the regression coefficients and save the
# results for later use
regci <- confint(regresults, level = 0.95)
regci
# Using the classic theme which has no shading for reference lines
ggplot(data=perio1class, aes(x=tnf, y=cadia, color=condition)) +
geom_point(size =2 , alpha = 1.0) +
geom_smooth(method="loess", color="darkgrey", se=FALSE, linetype=2) +
geom_smooth(method="lm", color="black") +
labs(color = "Condition", x = "Tumor necrosis factor alpha",
y = "Change in bone density (CADIA)") +
theme_classic() +
annotate(geom ="text", x =55, y = 8,
label =paste("Slope = ", round(regsum$coefficients[2,1],2)),
adj=0) +
annotate(geom ="text", x =55, y = 6,
label =paste("P-value = ", round(regsum$coefficients[2,4],2)),
adj=0) +
annotate(geom ="text", x =55, y = 4,
label =paste("R-squared = ", 100*round(regsum$r.squared,2),"%",
sep = ""), adj=0)
ggplot(data=perio1class, aes(x=tnf, y=cadia, color=condition)) +
geom_point(size =2 , alpha = 1.0) +
geom_smooth(method="loess", color="darkgrey", se=FALSE, linetype=2) +
geom_smooth(method="lm", color="black") +
labs(color = "Condition", x = "Tumor necrosis factor alpha",
y = "Change in bone density (CADIA)") +
theme_classic() +
annotate(geom ="text", x =25, y = 8,
label =paste("Slope = ", round(regsum$coefficients[2,1],2)),
adj=0) +
annotate(geom ="text", x =25, y = 6,
label =paste("P-value = ", round(regsum$coefficients[2,4],2)),
adj=0) +
annotate(geom ="text", x =25, y = 4,
label =paste("R-squared = ", 100*round(regsum$r.squared,2),"%",
sep = ""), adj=0)
ggplot(data=perio1class, aes(x=tnf, y=cadia, color=condition)) +
geom_point(size =2 , alpha = 1.0) +
geom_smooth(method="loess", color="darkgrey", se=FALSE, linetype=2) +
geom_smooth(method="lm", color="black") +
labs(color = "Condition", x = "Tumor necrosis factor alpha",
y = "Change in bone density (CADIA)") +
theme_classic() +
annotate(geom ="text", x =20, y = 8,
label =paste("Slope = ", round(regsum$coefficients[2,1],2)),
adj=0) +
annotate(geom ="text", x =20, y = 6,
label =paste("P-value = ", round(regsum$coefficients[2,4],2)),
adj=0) +
annotate(geom ="text", x =20, y = 4,
label =paste("R-squared = ", 100*round(regsum$r.squared,2),"%",
sep = ""), adj=0)
ggplot(data=perio1class, aes(x=tnf, y=cadia, color=condition)) +
geom_point(size =2 , alpha = 1.0) +
geom_smooth(method="loess", color="darkgrey", se=FALSE, linetype=2) +
geom_smooth(method="lm", color="black") +
labs(color = "Condition", x = "Tumor necrosis factor alpha",
y = "Change in bone density (CADIA)") +
theme_classic() +
annotate(geom ="text", x =20, y = 8,
label =paste("Slope = ", round(regsum$coefficients[2,1],2)),
adj=1) +
annotate(geom ="text", x =20, y = 6,
label =paste("P-value = ", round(regsum$coefficients[2,4],2)),
adj=0) +
annotate(geom ="text", x =20, y = 4,
label =paste("R-squared = ", 100*round(regsum$r.squared,2),"%",
sep = ""), adj=0)
ggplot(data=perio1class, aes(x=tnf, y=cadia, color=condition)) +
geom_point(size =2 , alpha = 1.0) +
geom_smooth(method="loess", color="darkgrey", se=FALSE, linetype=2) +
geom_smooth(method="lm", color="black") +
labs(color = "Condition", x = "Tumor necrosis factor alpha",
y = "Change in bone density (CADIA)") +
theme_classic() +
annotate(geom ="text", x =20, y = 8,
label =paste("Slope = ", round(regsum$coefficients[2,1],2)),
adj=1) +
annotate(geom ="text", x =20, y = 6,
label =paste("P-value = ", round(regsum$coefficients[2,4],2)),
adj=1) +
annotate(geom ="text", x =20, y = 4,
label =paste("R-squared = ", 100*round(regsum$r.squared,2),"%",
sep = ""), adj=1)
ggplot(data=perio1class, aes(x=tnf, y=cadia, color=condition)) +
geom_point(size =2 , alpha = 1.0) +
geom_smooth(method="loess", color="darkgrey", se=FALSE, linetype=1) +
geom_smooth(method="lm", color="black") +
labs(color = "Condition", x = "Tumor necrosis factor alpha",
y = "Change in bone density (CADIA)") +
theme_classic() +
annotate(geom ="text", x =20, y = 8,
label =paste("Slope = ", round(regsum$coefficients[2,1],2)),
adj=1) +
annotate(geom ="text", x =20, y = 6,
label =paste("P-value = ", round(regsum$coefficients[2,4],2)),
adj=1) +
annotate(geom ="text", x =20, y = 4,
label =paste("R-squared = ", 100*round(regsum$r.squared,2),"%",
sep = ""), adj=1)
ggplot(data=perio1class, aes(x=tnf, y=cadia, color=condition)) +
geom_point(size =2 , alpha = 1.0) +
geom_smooth(method="loess", color="darkgrey", se=FALSE, linetype=4) +
geom_smooth(method="lm", color="black") +
labs(color = "Condition", x = "Tumor necrosis factor alpha",
y = "Change in bone density (CADIA)") +
theme_classic() +
annotate(geom ="text", x =20, y = 8,
label =paste("Slope = ", round(regsum$coefficients[2,1],2)),
adj=1) +
annotate(geom ="text", x =20, y = 6,
label =paste("P-value = ", round(regsum$coefficients[2,4],2)),
adj=1) +
annotate(geom ="text", x =20, y = 4,
label =paste("R-squared = ", 100*round(regsum$r.squared,2),"%",
sep = ""), adj=1)
ggplot(data=perio1class, aes(x=tnf, y=cadia, color=condition)) +
geom_point(size =2 , alpha = 1.0) +
geom_smooth(method="loess", color="darkgrey", se=FALSE, linetype=2) +
geom_smooth(method="lm", color="black") +
labs(color = "Condition", x = "Tumor necrosis factor alpha",
y = "Change in bone density (CADIA)") +
theme_classic() +
annotate(geom ="text", x =20, y = 8,
label =paste("Slope = ", round(regsum$coefficients[2,1],2)),
adj=2) +
annotate(geom ="text", x =20, y = 6,
label =paste("P-value = ", round(regsum$coefficients[2,4],2)),
adj=1) +
annotate(geom ="text", x =20, y = 4,
label =paste("R-squared = ", 100*round(regsum$r.squared,2),"%",
sep = ""), adj=1)
ggplot(data=perio1class, aes(x=tnf, y=cadia, color=condition)) +
geom_point(size =2 , alpha = 1.0) +
geom_smooth(method="loess", color="darkgrey", se=FALSE, linetype=2) +
geom_smooth(method="lm", color="black") +
labs(color = "Condition", x = "Tumor necrosis factor alpha",
y = "Change in bone density (CADIA)") +
theme_classic() +
annotate(geom ="text", x =20, y = 8,
label =paste("Slope = ", round(regsum$coefficients[2,1],2)),
adj=2) +
annotate(geom ="text", x =20, y = 6,
label =paste("P-value = ", round(regsum$coefficients[2,4],2)),
adj=2) +
annotate(geom ="text", x =20, y = 4,
label =paste("R-squared = ", 100*round(regsum$r.squared,2),"%",
sep = ""), adj=1)
ggplot(data=perio1class, aes(x=tnf, y=cadia, color=condition)) +
geom_point(size =2 , alpha = 1.0) +
geom_smooth(method="loess", color="darkgrey", se=FALSE, linetype=2) +
geom_smooth(method="lm", color="black") +
labs(color = "Condition", x = "Tumor necrosis factor alpha",
y = "Change in bone density (CADIA)") +
theme_classic() +
annotate(geom ="text", x =20, y = 8,
label =paste("Slope = ", round(regsum$coefficients[2,1],2)),
adj=2) +
annotate(geom ="text", x =20, y = 6,
label =paste("P-value = ", round(regsum$coefficients[2,4],2)),
adj=2) +
annotate(geom ="text", x =20, y = 4,
label =paste("R-squared = ", 100*round(regsum$r.squared,2),"%",
sep = ""), adj=2)
ggplot(data=perio1class, aes(x=tnf, y=cadia, color=condition)) +
geom_point(size =2 , alpha = 1.0) +
geom_smooth(method="loess", color="darkgrey", se=FALSE, linetype=2) +
geom_smooth(method="lm", color="black") +
labs(color = "Condition", x = "Tumor necrosis factor alpha",
y = "Change in bone density (CADIA)") +
theme_classic() +
annotate(geom ="text", x =20, y = 8,
label =paste("Slope = ", round(regsum$coefficients[2,1],2)),
adj=2) +
annotate(geom ="text", x =20, y = 6,
label =paste("P-value = ", round(regsum$coefficients[2,4],2)),
adj=2) +
annotate(geom ="text", x =20, y = 4,
label =paste("R-squared = ", 100*round(regsum$r.squared,2),"%",
sep = ""), adj=1.5)
ggplot(data=perio1class, aes(x=tnf, y=cadia, color=condition)) +
geom_point(size =2 , alpha = 1.0) +
geom_smooth(method="loess", color="darkgrey", se=FALSE, linetype=2) +
geom_smooth(method="lm", color="black") +
labs(color = "Condition", x = "Tumor necrosis factor alpha",
y = "Change in bone density (CADIA)") +
theme_classic() +
annotate(geom ="text", x =20, y = 8,
label =paste("Slope = ", round(regsum$coefficients[2,1],2)),
adj=2) +
annotate(geom ="text", x =20, y = 6,
label =paste("P-value = ", round(regsum$coefficients[2,4],2)),
adj=2) +
annotate(geom ="text", x =20, y = 4,
label =paste("R-squared = ", 100*round(regsum$r.squared,2),"%",
sep = ""), adj=1.75)
ggplot(data=perio1class, aes(x=tnf, y=cadia, color=condition)) +
geom_point(size =2 , alpha = 1.0) +
geom_smooth(method="loess", color="darkgrey", se=FALSE, linetype=2) +
geom_smooth(method="lm", color="black") +
labs(color = "Condition", x = "Tumor necrosis factor alpha",
y = "Change in bone density (CADIA)") +
theme_classic() +
annotate(geom ="text", x =20, y = 8,
label =paste("Slope = ", round(regsum$coefficients[2,1],2)),
adj=2) +
annotate(geom ="text", x =20, y = 6,
label =paste("P-value = ", round(regsum$coefficients[2,4],2)),
adj=2) +
annotate(geom ="text", x =20, y = 4,
label =paste("R-squared = ", 100*round(regsum$r.squared,2),"%",
sep = ""), adj=1.70)
ggplot(data=perio1class, aes(x=tnf, y=cadia, color=condition)) +
geom_point(size =2 , alpha = 1.0) +
geom_smooth(method="loess", color="darkgrey", se=FALSE, linetype=2) +
geom_smooth(method="lm", color="black") +
labs(color = "Condition", x = "Tumor necrosis factor alpha",
y = "Change in bone density (CADIA)") +
theme_classic() +
annotate(geom ="text", x =20, y = 8,
label =paste("Slope = ", round(regsum$coefficients[2,1],2)),
adj=2) +
annotate(geom ="text", x =20, y = 6,
label =paste("P-value = ", round(regsum$coefficients[2,4],2)),
adj=2.1) +
annotate(geom ="text", x =20, y = 4,
label =paste("R-squared = ", 100*round(regsum$r.squared,2),"%",
sep = ""), adj=1.70)
ggplot(data=perio1class, aes(x=tnf, y=cadia, color=condition)) +
geom_point(size =2 , alpha = 1.0) +
geom_smooth(method="loess", color="darkgrey", se=FALSE, linetype=2) +
geom_smooth(method="lm", color="black") +
labs(color = "Condition", x = "Tumor necrosis factor alpha",
y = "Change in bone density (CADIA)") +
theme_classic() +
annotate(geom ="text", x =20, y = 8,
label =paste("Slope = ", round(regsum$coefficients[2,1],2)),
adj=2) +
annotate(geom ="text", x =20, y = 6,
label =paste("P-value = ", round(regsum$coefficients[2,4],2)),
adj=2.05) +
annotate(geom ="text", x =20, y = 4,
label =paste("R-squared = ", 100*round(regsum$r.squared,2),"%",
sep = ""), adj=1.70)
ggplot(data=perio1class, aes(x=tnf, y=cadia, color=condition)) +
geom_point(size =2 , alpha = 1.0) +
geom_smooth(method="loess", color="darkgrey", se=FALSE, linetype=2) +
geom_smooth(method="lm", color="black") +
labs(color = "Condition", x = "Tumor necrosis factor alpha",
y = "Change in bone density (CADIA)") +
theme_classic() +
annotate(geom ="text", x =20, y = 8,
label =paste("Slope = ", round(regsum$coefficients[2,1],2)),
adj=2) +
annotate(geom ="text", x =20, y = 6,
label =paste("P-value = ", round(regsum$coefficients[2,4],2)),
adj=2.04) +
annotate(geom ="text", x =20, y = 4,
label =paste("R-squared = ", 100*round(regsum$r.squared,2),"%",
sep = ""), adj=1.70)
ggplot(data=perio1class, aes(x=tnf, y=cadia, color=condition)) +
geom_point(size =2 , alpha = 1.0) +
geom_smooth(method="loess", color="darkgrey", se=FALSE, linetype=2) +
geom_smooth(method="lm", color="black") +
labs(color = "Condition", x = "Tumor necrosis factor alpha",
y = "Change in bone density (CADIA)") +
theme_classic() +
annotate(geom ="text", x =20, y = 8,
label =paste("Slope = ", round(regsum$coefficients[2,1],2)),
adj=2) +
annotate(geom ="text", x =20, y = 6,
label =paste("P-value = ", round(regsum$coefficients[2,4],2)),
adj=2) +
annotate(geom ="text", x =20, y = 4,
label =paste("R-squared = ", 100*round(regsum$r.squared,2),"%",
sep = ""), adj=1.70)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
debugSource("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
debugSource("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
debugSource("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
force(value_col)
debugSource("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
force(value_col)
debugSource("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
debugSource("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(VEGF165VEGFR1)
View(VEGF165VEGFR1)
View(VEGF165VEGFR2)
View(VEGF165VEGFR2)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(VEGF165VEGFR1)
View(VEGF165VEGFR1)
View(VEGF165VEGFR2)
View(VEGF165VEGFR2)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
any(VEGF165VEGFR2$Reference == "Huang et al., 1998 (VEGF-A165)")
length(VEGF165VEGFR2$Reference == "Huang et al., 1998 (VEGF-A165)")
length(VEGF165VEGFR2[VEGF165VEGFR2$Reference == "Huang et al., 1998 (VEGF-A165)", "kon"])
)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
# Clear all ---------------------------------------------------------------
# Clear plots
if (!is.null(dev.list())) dev.off()
# Clear console
cat("\014")
# Clear workspace
rm(list = ls())
# Change working directory ------------------------------------------------
setwd("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R")
# Add path ----------------------------------------------------------------
subfolders = c("etc", "visualize")
for (i in 1:length(subfolders)) {
a = list.files(path = subfolders[i], pattern = "[.]R$", full.names = TRUE)
for (j in 1:length(a)) {
source(a[j])
}
}
# Check and generate a result folder --------------------------------------
results_path = "../../results/figures/R"
# Generate new results folder
dir.create(results_path, recursive = TRUE)
# Load libraries ----------------------------------------------------------
pkg_list = c("ggplot2", "metafor", "readxl", "weights", "latex2exp", "ggpubr",
"shades", "ggnewscale", "scales", "ggsignif", "colormap","stringi")
instant_pkgs(pkg_list)
# Load data ---------------------------------------------------------------
filename = '../../data/kon_koffs.xlsx'
vegfkonkoff <- as.data.frame(read_excel(filename))
# Split Data by parameter -------------------------------------------------
VEGF165VEGFR1 <- vegfkonkoff[vegfkonkoff$Parameter == "VEGF165:VEGR1", ]
VEGF165VEGFR2 <- vegfkonkoff[vegfkonkoff$Parameter == "VEGF165:VEGFR2", ]
# Give assumed SE----------------------------------------------------------
#VEGF165:VEGFR2 SE creation for 165 and 164 'kon', 'koff', and 'Kd'
# Define a function to calculate and update standard errors
update_se <- function(df, value_col, se_col, ligand) {
# Create a logical vector indicating which rows to update
rows_to_update <- is.na(df[[se_col]]) & df$Ligand == ligand
# Extract the values from the specified column for the rows to update
values <- df[rows_to_update, value_col]
# Calculate the standard error of the values and put the values into the dataframe
df[rows_to_update, se_col] <- sd(values) / sqrt(length(values))
return(df)
}
# Update standard errors for 'kon', 'koff', and 'Kd' columns
VEGF165VEGFR2 <- update_se(VEGF165VEGFR2, "kon", "kon_SE", "VEGF165")
VEGF165VEGFR2 <- update_se(VEGF165VEGFR2, "koff", "koff_SE", "VEGF165")
VEGF165VEGFR2 <- update_se(VEGF165VEGFR2, "Kd", "Kd_SE", "VEGF165")
VEGF165VEGFR2 <- update_se(VEGF165VEGFR2, "kon", "kon_SE", "VEGF164")
VEGF165VEGFR2 <- update_se(VEGF165VEGFR2, "koff", "koff_SE", "VEGF164")
VEGF165VEGFR2 <- update_se(VEGF165VEGFR2, "Kd", "Kd_SE", "VEGF164")
# combined the rows and display the means
VEGF165VEGFR2[VEGF165VEGFR2$Reference == "Huang et al., 1998 (VEGF-A165)", "kon"] <- mean(VEGF165VEGFR2[VEGF165VEGFR2$Reference == "Huang et al., 1998 (VEGF-A165)", "kon"])
View(VEGF165VEGFR2)
View(VEGF165VEGFR2)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(vegfkonkoff)
View(vegfkonkoff)
View(VEGF165VEGFR2)
View(VEGF165VEGFR2)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(VEGF165VEGFR2)
View(VEGF165VEGFR2)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(VEGF165VEGFR2)
View(VEGF165VEGFR2)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(result)
View(result)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
