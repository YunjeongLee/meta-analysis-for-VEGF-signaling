perio1class %>% select(condition, tnf) %>%
tbl_summary(by = Type,
missing = "ifany",
type = all_continuous() ~ "continuous2",
statistic = all_continuous() ~ c("{mean} ({sd})",
"{median} ({p25}, {p75})",
"{min}, {max}",
"{skewness}"),
digits = list(all_continuous() ~ 1),
label = list(tnf ~ "Tumor necrosis factor alpha")) %>%
modify_header(label = "**Variable**") %>%
modify_spanning_header(list(stat_1 ~ "**Syndrome type**",
stat_2 ~ "**Syndrome type**",
stat_3 ~ "**Syndrome type**",
stat_4 ~ "**Syndrome type**")) %>%
add_stat_label(label = all_continuous() ~ c("Mean (SD)", "Median (IQR)",
"Min, Max", "Skewness"))
perio1class %>% select(condition, tnf) %>%
tbl_summary(by = condition,
missing = "ifany",
type = all_continuous() ~ "continuous2",
statistic = all_continuous() ~ c("{mean} ({sd})",
"{median} ({p25}, {p75})",
"{min}, {max}",
"{skewness}"),
digits = list(all_continuous() ~ 1),
label = list(tnf ~ "(TNF-alpha) levels")) %>%
modify_header(label = "**Variable**")
wilcox.test(tnf ~ condition,data=perio1class,correct=TRUE)
View(perio1class)
View(perio1class)
rabbit <- read.csv(file="rabbit.csv")
View(rabbit)
View(rabbit)
rabbit %>% select(Group, Week10) %>%
tbl_summary(by = Group,
missing = "ifany",
type = list(all_continuous() ~ "continuous2",
Week10 ~ "continuous2"),
statistic = all_continuous() ~ c("{mean} ({sd})",
"{median} ({p25}, {p75})",
"{min}, {max}",
"{skewness}"),
digits = list(all_continuous() ~ 1),
label = list(Week10 ~
"Week 10 titers")) %>%
modify_header(label = "**Variable**") %>%
modify_spanning_header(list(stat_1 ~ "**Group**",
stat_2 ~ "**Group**",
stat_3 ~ "**Group**",
stat_4 ~ "**Group**")) %>%
add_stat_label(label = all_continuous() ~ c("Mean (SD)", "Median (IQR)",
"Min, Max", "Skewness"))
rabbit %>% select(Group, Week10) %>%
tbl_summary(by = Group,
missing = "ifany",
type = list(all_continuous() ~ "continuous2",
Week10 ~ "continuous2"),
statistic = all_continuous() ~ c("{mean} ({sd})",
"{median} ({p25}, {p75})",
"{min}, {max}",
"{skewness}"),
digits = list(all_continuous() ~ 1),
label = list(Week10 ~
"Week 10 titers")) %>%
modify_header(label = "**Variable**") %>%
modify_spanning_header(list(stat_1 ~ "**Group**",
stat_2 ~ "**Group**",
stat_3 ~ "**Group**",
stat_4 ~ "**Group**")) %>%
add_stat_label(label = all_continuous() ~ c("Mean (SD)", "Median (IQR)",
"Min, Max", "Skewness"))
rabbit %>% select(Group, Week11) %>%
tbl_summary(by = Group,
missing = "ifany",
type = list(all_continuous() ~ "continuous2",
Week11 ~ "continuous2"),
statistic = all_continuous() ~ c("{mean} ({sd})",
"{median} ({p25}, {p75})",
"{min}, {max}",
"{skewness}"),
digits = list(all_continuous() ~ 1),
label = list(Week11 ~
"Week 11 titers")) %>%
modify_header(label = "**Variable**") %>%
modify_spanning_header(list(stat_1 ~ "**Group**",
stat_2 ~ "**Group**",
stat_3 ~ "**Group**",
stat_4 ~ "**Group**")) %>%
add_stat_label(label = all_continuous() ~ c("Mean (SD)", "Median (IQR)",
"Min, Max", "Skewness"))
rabbit %>% select(Group, Week11) %>%
tbl_summary(by = Group,
missing = "ifany",
type = list(all_continuous() ~ "continuous2",
Week11 ~ "continuous2"),
statistic = all_continuous() ~ c("{mean} ({sd})",
"{median} ({p25}, {p75})",
"{min}, {max}",
"{skewness}"),
digits = list(all_continuous() ~ 1),
label = list(Week11 ~
"Week 11 titers")) %>%
modify_header(label = "**Variable**") %>%
modify_spanning_header(list(stat_1 ~ "**Group**",
stat_2 ~ "**Group**",
stat_3 ~ "**Group**",
stat_4 ~ "**Group**")) %>%
add_stat_label(label = all_continuous() ~ c("Mean (SD)", "Median (IQR)",
"Min, Max", "Skewness"))
rabbit %>% select(Group, Week11) %>%
tbl_summary(by = Group,
missing = "ifany",
type = list(all_continuous() ~ "continuous2",
Week11 ~ "continuous2"),
statistic = all_continuous() ~ c(
"{median} ({p25}, {p75})",
"{min}, {max}"),
digits = list(all_continuous() ~ 1),
label = list(Week11 ~
"Week 11 titers")) %>%
modify_header(label = "**Variable**") %>%
modify_spanning_header(list(stat_1 ~ "**Group**",
stat_2 ~ "**Group**",
stat_3 ~ "**Group**",
stat_4 ~ "**Group**")) %>%
add_stat_label(label = all_continuous() ~ c("Mean (SD)", "Median (IQR)",
"Min, Max", "Skewness"))
rabbit %>% select(Group, Week11) %>%
tbl_summary(by = Group,
missing = "ifany",
type = list(all_continuous() ~ "continuous2",
Week11 ~ "continuous2"),
statistic = all_continuous() ~ c("{median} ({p25}, {p75})",
"{min}, {max}"),
digits = list(all_continuous() ~ 1),
label = list(Week11 ~
"Week 11 titers")) %>%
modify_header(label = "**Variable**") %>%
modify_spanning_header(list(stat_1 ~ "**Group**",
stat_2 ~ "**Group**",
stat_3 ~ "**Group**",
stat_4 ~ "**Group**")) %>%
add_stat_label(label = all_continuous() ~ c("Median (IQR)",
"Min, Max"))
rabbit %>% select(Group, Week11) %>%
tbl_summary(by = Group,
missing = "ifany",
type = list(all_continuous() ~ "continuous2",
Week11 ~ "continuous2"),
statistic = all_continuous() ~ c("{mean} ({sd})",
"{median} ({p25}, {p75})",
"{min}, {max}",
"{skewness}"),
digits = list(all_continuous() ~ 1),
label = list(Week11 ~
"Week 11 titers")) %>%
modify_header(label = "**Variable**") %>%
modify_spanning_header(list(stat_1 ~ "**Group**",
stat_2 ~ "**Group**",
stat_3 ~ "**Group**",
stat_4 ~ "**Group**")) %>%
add_stat_label(label = all_continuous() ~ c("Mean (SD)", "Median (IQR)",
"Min, Max", "Skewness"))
rabbit %>% select(Group, MaxVDRL) %>%
tbl_summary(by = Group,
missing = "ifany",
type = list(all_continuous() ~ "continuous2",
MaxVDRL ~ "continuous2"),
statistic = all_continuous() ~ c("{mean} ({sd})",
"{median} ({p25}, {p75})",
"{min}, {max}",
"{skewness}"),
digits = list(all_continuous() ~ 1),
label = list(MaxVDRL ~
"MaxVDRL titers")) %>%
modify_header(label = "**Variable**") %>%
modify_spanning_header(list(stat_1 ~ "**Group**",
stat_2 ~ "**Group**",
stat_3 ~ "**Group**",
stat_4 ~ "**Group**")) %>%
add_stat_label(label = all_continuous() ~ c("Mean (SD)", "Median (IQR)",
"Min, Max", "Skewness"))
rabbit %>% select(Group, MaxVDRL) %>%
tbl_summary(by = Group,
missing = "ifany",
type = list(all_continuous() ~ "continuous2",
MaxVDRL ~ "continuous2"),
statistic = all_continuous() ~ c("{mean} ({sd})",
"{median} ({p25}, {p75})",
"{min}, {max}",
"{skewness}"),
digits = list(all_continuous() ~ 1),
label = list(MaxVDRL ~
"MaxVDRL titers")) %>%
modify_header(label = "**Variable**") %>%
modify_spanning_header(list(stat_1 ~ "**Group**",
stat_2 ~ "**Group**",
stat_3 ~ "**Group**",
stat_4 ~ "**Group**")) %>%
add_stat_label(label = all_continuous() ~ c("Mean (SD)", "Median (IQR)",
"Min, Max", "Skewness"))
ggplot(rabbit, aes(x=Group, y=MaxVDRL, color=Group, fill=Group)) +
stat_summary(fun=median, geom="crossbar", linewidth=0.5, color="black",
show.legend = FALSE) +
geom_dotplot(binaxis='y', stackdir='center', dotsize=0.6, binwidth=0.4,
show.legend = FALSE) +
theme_classic() +
labs(x = "Group", y = "MaxVDRL titers")
install.packages(“dunn.test”)
install.packages(“dunn.test”)
install.packages(“dunn.test”)
kruskal.test(Week10 ~ factor(Group), data=rabbit)
# Load dunn.test package
library(dunn.test)
# Kruskal-Wallis rank sum test
dunn.test(rabbit$Week10, rabbit$Group, method="holm")
kruskal.test(MaxVDRL ~ factor(Group), data=rabbit)
# Load dunn.test package
library(dunn.test)
# Kruskal-Wallis rank sum test
dunn.test(rabbit$MaxVDRL, rabbit$Group, method="holm")
mydata <- matrix(c(12,3,6,11),nrow=2,ncol=2,byrow=TRUE)
# Look at the matrix
mydata
mydata <- matrix(c(12,3,6,11),nrow=2,ncol=2,byrow=TRUE)
# Look at the matrix
colnames(mydata) <- c("Affected","Not Affected")
rownames(mydata) <- c("Patients","Controls")
mydata
chisq.test(mydata,correct=FALSE)
fisher.test(mydata)
mydata2 %>% select(group, affected) %>%
tbl_summary(by = group,
missing = "ifany",
type = list(affected ~ "categorical"),
digits = all_categorical() ~ c(0, 1), # 0 digits for n, 1 for %
label = list(affected ~ "Affected"))
group <- c(rep("Patients",15), rep("Controls",17))
affected <- c(rep("Yes",12), rep("No",3),
rep("Yes",6), rep("No",11))
mydata2 <- tibble(group = group, affected = affected)
mydata2 %>% select(group, affected) %>%
tbl_summary(by = group,
missing = "ifany",
digits = all_categorical() ~ c(0, 1), # 0 digits for n, 1 for %
label = list(affected ~ "Affected"))
group <- c(rep("Patients",15), rep("Controls",17))
affected <- c(rep("Yes",12), rep("No",3),
rep("Yes",6), rep("No",11))
mydata2 <- tibble(group = group, affected = affected)
mydata2 %>% select(group, affected) %>%
tbl_summary(by = group,
missing = "ifany",
type = list(affected ~ "categorical"),
digits = all_categorical() ~ c(0, 1), # 0 digits for n, 1 for %
label = list(affected ~ "Affected"))
group <- c(rep("Patients",15), rep("Controls",17))
affected <- c(rep("Yes",12), rep("No",3),
rep("Yes",6), rep("No",11))
mydata2 <- tibble(group = group, affected = affected)
mydata2 %>% select(group, affected) %>%
tbl_summary(by = group,
missing = "ifany",
type = list(affected ~ "categorical"),
digits = all_categorical() ~ c(0, 1), # 0 digits for n, 1 for %
label = list(affected ~ "Affected"))
group <- c(rep("Patients",15), rep("Controls",17))
affected <- c(rep("Yes",12), rep("No",3),
rep("Yes",6), rep("No",11))
mydata2 <- tibble(group = group, affected = affected)
mydata2 %>% select(group, affected) %>%
tbl_summary(by = group,
missing = "ifany",
type = list(affected ~ "categorical"),
statistic = all_categorical() ~ "{p} ({n})",
digits = all_categorical() ~ c(1, 0), # 1 digits for %, 0 for %
label = list(affected ~ "Affected, % (n)")) %>%
add_overall() %>%
modify_footnote(everything() ~ NA)
# Load data ---------------------------------------------------------------
filename = '../../data/kon_koffs.xlsx'
# Clear all ---------------------------------------------------------------
# Clear plots
if (!is.null(dev.list())) dev.off()
# Clear all ---------------------------------------------------------------
# Clear plots
if (!is.null(dev.list())) dev.off()
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(vegfkonkoff)
View(vegfkonkoff)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_receptors_binding_affinity.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_receptors_binding_affinity.R", echo=TRUE)
# Clear console
cat("\014")
# Add path ----------------------------------------------------------------
subfolders = c("etc", "visualize")
# Change working directory ------------------------------------------------
setwd("/Users/yunjeong/Documents/repos/meta-analysis-for-VEGF-signaling/code/R")
# Change working directory ------------------------------------------------
setwd("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R")
for (i in 1:length(subfolders)) {
a = list.files(path = subfolders[i], pattern = "[.]R$", full.names = TRUE)
for (j in 1:length(a)) {
source(a[j])
}
}
# Generate new results folder
dir.create(results_path, recursive = TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_receptors_binding_affinity.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_receptors_binding_affinity.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
debugSource("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
Q
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(df)
View(df)
View(vegfkonkoff)
View(vegfkonkoff)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(VEGF165VEGR1)
View(VEGF165VEGR1)
VEGF165VEGR1 <- vegfkonkoff[vegfkonkoff$VEGF165:VEGR1]
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(VEGF165VEGR1)
View(VEGF165VEGR1)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(VEGF165NRP1)
View(VEGF165NRP1)
View(vegfkonkoff)
View(vegfkonkoff)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(VEGF165VEGR1)
View(VEGF165VEGR1)
View(VEGF165VEGFR2)
View(VEGF165VEGFR2)
View(VEGF165VEGFR2)
View(VEGF165VEGFR2)
View(VEGF165VEGR1)
View(VEGF165VEGR1)
View(vegfkonkoff)
View(vegfkonkoff)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(vegfkonkoff)
View(vegfkonkoff)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(VEGF165VEGR1)
View(VEGF165VEGR1)
View(VEGF165VEGFR2)
View(VEGF165VEGFR2)
View(VEGF165VEGR1)
View(VEGF165VEGR1)
View(vegfkonkoff)
View(VEGF165VEGR1)
View(VEGF165VEGFR2)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(VEGF165VEGFR2)
View(VEGF165VEGFR2)
VEGF165NRP1 <- vegfkonkoff[vegfkonkoff$Parameter == "VEGF165:NRP1",]
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(VEGF165NRP1)
View(VEGF165NRP1)
View(VEGF165VEGFR2)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
se
# Extract the values from the 'kon SE' column
values <- VEGF165VEGFR2[is.na(VEGF165VEGFR2["kon SE"]) & VEGF165VEGFR2$Ligand == "VEGF165", "kon"]
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
# put the values into the dataframe
VEGF165VEGFR2[is.na(VEGF165VEGFR2["kon SE"]) & VEGF165VEGFR2$Ligand == "VEGF165", "kon SE"] <- sd(values) / sqrt(length(values))
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
# Calculate the standard error of the values and put the values into the dataframe
VEGF165VEGFR2[is.na(VEGF165VEGFR2["kon SE"]) & VEGF165VEGFR2$Ligand == "VEGF164", "kon SE"] <- sd(values) / sqrt(length(values))
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
# Create a logical vector indicating which rows to update
rows_to_update <- is.na(VEGF165VEGFR2["kon SE"]) & VEGF165VEGFR2$Ligand == "VEGF165"
# Create a logical vector indicating which rows to update
rows_to_update <- is.na(VEGF165VEGFR2["kon SE"]) & VEGF165VEGFR2$Ligand == "VEGF164"
# Create a logical vector indicating which rows to update
rows_to_update <- is.na(VEGF165VEGFR2["kon SE"]) & VEGF165VEGFR2$Ligand == "VEGF164"
# Calculate the standard error of the values and put the values into the dataframe
VEGF165VEGFR2[rows_to_update, "kon SE"] <- sd(values) / sqrt(length(values))
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(VEGF165NRP1)
View(VEGF165NRP1)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
VEGF165NRP1 <- update_se1(VEGF165NRP1, "Kd", "Kd SE")
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
VEGF165NRP1 <- update_se1(VEGF165NRP1, "koff", "koff SE")
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(vegfkonkoff)
View(vegfkonkoff)
View(vegfkonkoff)
View(vegfkonkoff)
View(vegfkonkoff)
View(VEGF165VEGR1)
View(VEGF165VEGR1)
View(VEGF165VEGFR2)
View(VEGF165VEGFR2)
View(VEGF165NRP1)
View(VEGF165NRP1)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_receptors_binding_affinity.R", echo=TRUE)
View(vegfr1)
View(vegfr1)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(VEGF165NRP1)
View(VEGF165NRP1)
View(VEGF165VEGR1)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_receptors_binding_affinity.R", echo=TRUE)
View(vegfr2)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_receptors_binding_affinity.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(vegfr1)
View(vegfr1)
View(vegfr1)
View(VEGF165VEGR1)
View(VEGF165VEGR1)
View(VEGF165NRP1)
View(VEGF165NRP1)
View(VEGF165VEGFR2)
View(VEGF165VEGFR2)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
help(rma)
View(vegfr1)
View(vegfr1)
View(vegfr2)
View(vegfr2)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
help(rma)
View(vegfr1)
View(vegfr1)
View(vegfr2)
View(vegfr2)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
# VEGF-A165:VEGFR2 kon
rm_vegfr2 <- rma(yi = kon, sei =  kon_SE, data=vegfr2, control = list(maxiter = 1000))
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(VEGF165VEGFR2)
View(VEGF165VEGFR2)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(vegfr1)
View(vegfr1)
View(vegfr1)
View(vegfr1)
View(vegfr1_vs_nrp1koff)
View(vegfr1_vs_nrp1koff)
View(vegfr2)
View(vegfr2)
View(df)
View(df)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
View(vegfkonkoff)
View(vegfkonkoff)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
source("C:/Users/lione/Desktop/GitHub/meta-analysis-for-VEGF-signaling/code/R/compare_VEGF_binding_to_VEGFR1vsVEGFR2vsNRP1.R", echo=TRUE)
